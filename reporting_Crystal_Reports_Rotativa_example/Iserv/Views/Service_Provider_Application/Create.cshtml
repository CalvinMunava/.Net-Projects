@model Iserv.Models.Service_Provider_Application

@{
    Layout = null;
    ViewBag.Title = "Apply to Be Provider";
}

<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Iservz</title>
    <link href="https://fonts.googleapis.com/css?family=IBM+Plex+Sans:400,600" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/dist/css/style.css">
    <script src="https://unpkg.com/animejs@3.0.1/lib/anime.min.js"></script>
    <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
    <!--ID-->


    <style>

        #debug {
            color: red;
            display: none;
        }
        /*Below is login*/
        input.form-control, input.form-control:focus {
            background-color: lightsteelblue;
            color: #fff;
            border-radius: 20px;
        }

            input.form-control:focus {
                box-shadow: none;
            }

        button[type=submit].btn {
            border-radius: 20px;
            background-color: lightskyblue;
            color: #fff;
        }

        div.form-group label:not(.text-danger) {
            align-self: center;
            font-weight: 700;
        }

        div.form-group.required > label:first-child:after {
            content: '*';
            color: #fff;
            padding-left: 5px;
        }

        #toast-container > div {
            opacity: 1;
        }

        .wrapper {
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            width: 100%;
            padding: 20px;
        }

        .wrapped-div {
            -webkit-border-radius: 10px 10px 10px 10px;
            border-radius: 20px;
            background: white;
            padding: 30px;
            width: 90%;
            max-width: 600px;
            position: relative;
            padding: 0px;
            -webkit-box-shadow: 0 30px 60px 0 rgba(0,0,0,0.3);
            box-shadow: 0 30px 60px 0 rgba(0,0,0,0.3);
        }

        /* Tabs */
        .tab-header {
            text-align: center;
        }

            .tab-header h2.active {
                color: lightblue;
                border-bottom: 4px solid #fff;
            }

            .tab-header h2 {
                text-align: center;
                font-size: 18px;
                font-weight: 600;
                display: inline-block;
                padding: 30px 40px 10px 40px;
                cursor: pointer;
                color: #545d6a;
                border-bottom: 2px solid #545d6a;
            }

                .tab-header h2:focus {
                    outline: none;
                }

        form {
            margin: 0px 16px;
        }

        div.form-group input.invalid {
            border: 1px solid lightcoral;
        }

        div.form-group label:first-child {
            text-transform: uppercase;
            font-size: 0.9rem;
        }

        .jumbotron {
            padding-top: 0px;
            background: #fff;
        }

        .form-control, .input-group-text {
            border: 1px solid #0080ff;
        }

        table.table-hover tbody tr:hover {
            cursor: pointer;
        }
    </style>
</head>
<body class="is-boxed has-animations">
    <nav class="navbar navbar-expand-lg " style="background-color:#1D2026">
        <button class="button button-dark button-sm" style=" border-radius:80px;margin-left:3%" onclick="window.location.href='@Url.Action("Landing","Home")'">

            <i style="color:white" class="fa fa-backward"> Return </i>

        </button>
    </nav>
    <div class="body-wrap">
        <header class="site-header">
            <div class="container">
                <div class="site-header-inner">
                    <div class="brand header-brand">
                        <h1 class="m-0">
                            <a href="#">
                                <img class="header-logo-image" src="~/Content/Site/login.png" alt="Logo">
                            </a>
                        </h1>
                    </div>
                    <div class="wrapper content">
                        <div class="wrapped-div" style="background-color:#1D2026;margin-top:-50px;width:auto;">
                            <div class="row">

                                @using (Html.BeginForm("Create", "Service_Provider_Application", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <h2>Business Information</h2>
                                    <br />
                                    <div class="col-md-10 offset-md-1" style="float:left">
                                        <div class="form-group">
                                            <label>Business Name</label>
                                            <br />
                                            <input class="form-control" id="BusinessName" name="BusinessName" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <div class="form-group">
                                            <label>VatNumber</label>
                                            <br />
                                            <input class="form-control" id="VatNumber" name="VatNumber" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <div class="form-group">
                                            <label>Street Number</label>
                                            <br />
                                            <input class="form-control" id="StreetNumber" name="StreetNumber" style="border-radius:20px;height:30px;background-color:#1D2026;width:60px" required>
                                        </div>
                                        <br />
                                        <div class="form-group">
                                            <label>Street Name</label>
                                            <br />
                                            <input class="form-control" id="StreetName" name="StreetName" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <div class="form-group">
                                            <br />
                                            @Html.LabelFor(model => model.ProvinceID, "Province", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ProvinceID", null, htmlAttributes: new { @class = "form-control", id = "firstDropDownId", name = "firstDropDownId", @style = "border-radius:20px;height:30px;background-color:black;color:white" })
                                                @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CityID, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("CityID", null, htmlAttributes: new { @class = "form-control", id = "secondDropDownId", name = "secondDropDownId", @style = "border-radius:20px;height:30px;background-color:black;color:white" })
                                                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <br />
                                    </div>

                                    <h2>Personal Information</h2>
                                    <div class="col-md-10 offset-md-1" style="float:left">
                                        <div class="form-group">
                                            <label>Name</label>
                                            <br />
                                            <input class="form-control" id="Name" name="Name" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <div class="form-group">
                                            <label>Surname</label>
                                            <br />
                                            <input class="form-control" id="Surname" name="Surname" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.GenderID, "GenderID", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control", @style = "border-radius:20px;height:30px;background-color:black;color:white" })
                                                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>Email</label>
                                            <br />
                                            <input type="email" class="form-control" id="Email" name="Email" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                        </div>
                                        <br />
                                        <div class="form-group">
                                            <label>Cell Number</label>
                                            <br />
                                            <small style="color:dodgerblue">Format: 123-456-7890</small>
                                            <br />
                                            <input class="form-control" id="CellNumber" name="CellNumber" style="border-radius:20px;height:30px;background-color:#1D2026" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" required>
                                            <br />
                                        </div>
                                        <br />
                                    </div>
                                    <div class="col-md-10 offset-md-1" style="float:right;margin-left:10px">
                                        <div class="form-group">
                                            <br />
                                            <input type="file" accept="image/gif, image/jpeg, image/png" name="image" id="file" style="display: none;" onchange="loadFile(event)" required>

                                            <p><label for="file" style="cursor: pointer;border-radius:30px" class="button button-dark">Upload ID </label></p>

                                            <img id="output" width="200" style="border-radius:30px" />

                                        </div>
                                        <div class="form-group">
                                            <label>ID Number</label>
                                            <br />
                                            <input size="13" id="idn" name="IdNumber" class="form-control" style="border-radius:20px;height:30px;background-color:#1D2026" required>
                                            <input class="button button-primary button-sm" style="border-radius:50px" value="Apply" type="submit" id="checkid" />
                                            <br />
                                            <br />
                                            <div id="debug" style="border:1px solid; border-radius:5px;border-color:darkred;width:auto"></div>

                                        </div>
                                        <br />
                                    </div>

                                }
                                <br />
                                <!--ID-->

                            </div>
                        </div>
                    </div>
                    <br />

                </div>
            </div>
        </header>

        <main>
            <section class="hero">
                <div class="container">
                    <div class="hero-inner">
                        <div class="hero-copy">
                            <h1 class="hero-title mt-0">@DateTime.Now.ToShortTimeString()</h1>
                            <div class="hero-cta">
                            </div>
                        </div>
                    </div>
                    <div class="hero-figure anime-element">
                        <svg class="placeholder" width="528" height="396" viewBox="0 0 528 396">
                            <rect width="528" height="396" style="fill:transparent;" />
                        </svg>
                        <div class="hero-figure-box hero-figure-box-01" data-rotation="45deg"></div>
                        <div class="hero-figure-box hero-figure-box-02" data-rotation="-45deg"></div>
                        <div class="hero-figure-box hero-figure-box-03" data-rotation="0deg"></div>
                        <div class="hero-figure-box hero-figure-box-04" data-rotation="-135deg"></div>
                        <div class="hero-figure-box hero-figure-box-05"></div>
                        <div class="hero-figure-box hero-figure-box-06"></div>
                        <div class="hero-figure-box hero-figure-box-07"></div>
                        <div class="hero-figure-box hero-figure-box-08" data-rotation="-22deg"></div>
                        <div class="hero-figure-box hero-figure-box-09" data-rotation="-52deg"></div>
                        <div class="hero-figure-box hero-figure-box-10" data-rotation="-50deg"></div>
                    </div>
                </div>
            </section>

        </main>

        <footer class="site-footer">
            <div class="container">
                <div class="site-footer-inner">
                    <div class="brand footer-brand">
                        <a href="#">
                        </a>
                    </div>

                    <div class="footer-copyright">&copy; 2020 By Iserv</div>
                </div>
            </div>
        </footer>
    </div> 
        <!--Scripts-->
        <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript">
        </script>
        <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript">
        </script>
        <script type="text/javascript" src="https://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js">
        </script>
         <script src="~/Content/dist/js/main.min.js">

         </script>
        <script>
          var loadFile = function (event) {
          var image = document.getElementById('output');
          image.src = URL.createObjectURL(event.target.files[0]);
           };
        </script>
        <script type="text/javascript">
        $(document).ready(function () {
            $('#firstDropDownId').change(function () {
                $(function () {
                    var city = parseInt($("#firstDropDownId").val());
                    $.ajax({                        
                        url: '@Url.Action("GetSecondData", "Service_Provider_Application")',
                        type: 'POST',
                        dataType: 'json',
                        data: { 'firstId': city },
                        success: function (data) {                            
                            var options = $('#secondDropDownId');
                            options.empty();
                            console.log(data);
                            $.each(data, function (i, item) {
                                options.append($('<option />').val(item.Value).text(item.Text));
                            });
                        },
                        error: function (response) {
                            console.log(response);
                        }
                    });

                });
            });
        });
            function validateRSAidnumber() {

                $('#debug').empty();

                // the anatomy of an RSA ID Number : http://warwickchapman.com/the-anatomy-of-an-rsa-id-number
                // structure: (YYMMDD GSSS CAZ)

                var idnumber = $('#idn').val(),
                    invalid = 0;

                // display debugging
                var debug = $('#debug');

                // check that value submitted is a number
                if (isNaN(idnumber)) {
                    debug.append('Value supplied is not a valid number.<br />');
                    invalid++;
                }

                // check length of 13 digits
                if (idnumber.length != 13) {
                    debug.append('Number supplied does not have 13 digits.<br />');
                    invalid++;
                }

                // check that YYMMDD group is a valid date
                var yy = idnumber.substring(0, 2),
                    mm = idnumber.substring(2, 4),
                    dd = idnumber.substring(4, 6);

                var dob = new Date(yy, (mm - 1), dd);

                // check values - add one to month because Date() uses 0-11 for months
                if (!(((dob.getFullYear() + '').substring(2, 4) == yy) && (dob.getMonth() == mm - 1) && (dob.getDate() == dd))) {
                    debug.append('Date in first 6 digits is invalid.<br />');
                    invalid++;
                }

                // evaluate GSSS group for gender and sequence 
                var gender = parseInt(idnumber.substring(6, 10), 10) > 5000 ? "M" : "F";

                // ensure third to last digit is a 1 or a 0
                if (idnumber.substring(10, 11) > 1) {
                    debug.append('Third to last digit can only be a 0 or 1 but is a ' + idnumber.substring(10, 11) + '.<br />');
                    invalid++;
                } else {
                    // determine citizenship from third to last digit (C)
                    var saffer = parseInt(idnumber.substring(10, 11), 10) === 0 ? "C" : "F";
                }

                // ensure second to last digit is a 8 or a 9
                if (idnumber.substring(11, 12) < 8) {
                    debug.append('Second to last digit can only be a 8 or 9 but is a ' + idnumber.substring(11, 12) + '.<br />');
                    invalid++;
                }

                // calculate check bit (Z) using the Luhn algorithm
                var ncheck = 0,
                    beven = false;

                for (var c = idnumber.length - 1; c >= 0; c--) {
                    var cdigit = idnumber.charAt(c),
                        ndigit = parseInt(cdigit, 10);

                    if (beven) {
                        if ((ndigit *= 2) > 9) ndigit -= 9;
                    }

                    ncheck += ndigit;
                    beven = !beven;
                }

                if ((ncheck % 10) !== 0) {
                    debug.append('Checkbit is incorrect.<br />');
                    invalid++;
                }

                // if one or more checks fail, display details
                if (invalid > 0) {
                    debug.css('display', 'block');
                }

                return (ncheck % 10) === 0;
            }
            $('#checkid').click(validateRSAidnumber);
        </script>
        <!--ID-->
  
</body>
</html>
