@model Iserv.Models.ServiceQuote

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutProvider.cshtml";
}


@using (Html.BeginForm("Create", "ServiceQuotes", FormMethod.Post))
{
    <input id="quotatonNumber" style="display:none" name="quotatonNumber" value="@ViewBag.QuoteID" />
    <div style="background-color:black;border-radius:20px;height:auto;padding:10px">
        <h2 style="color:cornflowerblue;margin-left:40%">New Quotation</h2>
        <br />
        <div style="margin-left:37%">
            <h2 style="color:white">@ViewBag.Businessname</h2>
            <p style="color:white;margin-left:10%">@ViewBag.Address</p>
        </div>
        <div>
            <div style="float:left;padding-left:10px">
                <h3 style="color:white"> Quote to <span style="color:cornflowerblue"> @ViewBag.ConsumerName</span> </h3>
            </div>
            <div style="float:right;padding-right:10px">
                <h3 style="color:white;">@DateTime.Now.ToShortDateString()</h3>
            </div>
        </div>
        <br />
        <br />
        <div class="form-group">
            <label style="color:white" class="control-label">How do you want to be paid?</label>
            <br />
            <div class="col-md-10">
                @Html.DropDownListFor(modelitem => modelitem.PaymentMethod_ID, (IEnumerable<SelectListItem>)ViewBag.PaymentMethod_ID, htmlAttributes: new { @class = "form-control", @style = "border-radius:20px;background-color:black;color:white", @required = true, id = "Pmethod", name = "Pmethod" })
                @Html.ValidationMessageFor(modelitem => modelitem.PaymentMethod_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label style="color:white" class="control-label">Quote Valid Until</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValidUntil, DateTime.Now.ToString("yyyy-MM-dd"), new { htmlAttributes = new { @class = "form-control", @style = "border-radius:20pxbackground-color:#1D2026", type = "Date", min = DateTime.Now.ToString("yyyy-MM-dd"), @required = true, id = "Datechosen", name = "Datechosen" } })
                @Html.ValidationMessageFor(model => model.ValidUntil, "", new { @class = "text-danger" })
            </div>
        </div>


        <div id="main">
            <table class="table table-striped" id="tbl-details">
                <thead>
                    <tr>
                        <th>Item Description</th>
                        <th>Quantity (R)</th>
                        <th>Price (R)</th>
                        <th>VAT (R)</th>
                        <th>Item Total (R)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="Added" id="tablefadded" style="color:white">
                </tbody>
            </table>
            <input type="button" class="button button-primary" style="border-radius:20%" value="Add" id="model-add" data-toggle="modal" data-target="#model-Add" />
            <br />
            <br />
            <div>
                <span><label>Total VAT: R </label><input class="form-control" style="color:white;background-color:black;width:200px" disabled id="TotalVAT" name="TotalVAT" /></span>
                <span><label>Total: R </label><input class="form-control" style="color:white;background-color:black;width:200px" disabled id="Total" name="Total" /></span>
            </div>
            <br />
        </div>
        <div style="margin-top:200px" class="modal fade" id="model-Add" tabindex="-1" role="dialog" data-backdrop="false">
            <div class="modal-dialog">

                <div class="modal-content" style="background-color:black;color:white;border-radius:15px;align-content:center">

                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Add to Quotation</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div>

                    <div class="modal-body">
                        <label>Item Description</label><br /><input type="text" id="model-description" style="border-radius:20px;color:white" placeholder="Add Description" required /><br />

                        <label>Quantity</label><br /><input type="number" id="model-quantity" class="form-control" style="border-radius:20px;color:white;background-color:black" placeholder="1" min="1" required /><br />

                        <label>Price</label><br /><input type="number" id="model-incl" class="form-control" style="border-radius:20px;color:white;background-color:black" placeholder="0.00" min="1" step="any" required /><br />


                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="button button-primary" id="btn-add" disabled data-dismiss="modal" aria-label="Close"><i class="fa fa-check"></i>Submit</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
}
<div class="btn btn-group" id="btnbtn">
    <button class="btn btn-info" id="SaveQuotation">Save Items</button>
    <button disabled class="btn btn-dark" id="return">Complete</button>
</div>

@section Scripts {
    <!--Scripts-->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10">

    </script>
    <script src="sweetalert2.all.min.js">

    </script>
    <!-- Optional: include a polyfill for ES6 Promises for IE11 -->
    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill">

    </script>
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript">

    </script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript">

    </script>
    <script type="text/javascript" src="https://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js">

    </script>
    <script>
        var Quantity;
        var Description;
        var InclPrice;
        var Exclusive;
        var VAT;
        //Hold Totals
        var TotalExclusive = 0;
        var TotalVat = 0;
        var Total = 0;
        $(document).ready(function () {

            $("#btnbtn").hide();
            $("#TotalDiscount").val("0.00");
            $("#TotalVAT").val("0.00");
            $("#TotalExclusive").val("0.00");
            $("#Total").val("0.00");
            debugger
            $("#model-incl").on("input", function () {
                $("#btn-add").prop("disabled", false);
            });
        });
    </script>
    <script type="text/javascript">

        $('#btn-add').click(function () {

            Quantity = parseInt($("#model-quantity").val());
            Description = $("#model-description").val();
            InclPrice = parseFloat($("#model-incl").val());


            if (Quantity == NaN || Description.trim() == "" || InclPrice == NaN) {
                debugger
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something is wrong, Please check all Input Data',
                });
                debugger
                $("#btn-add").prop("disabled", false);
            }
            else {

                debugger

                var tinclu = (Quantity * InclPrice);

                Inclusive = tinclu + ((15 / 100) * tinclu);

                VAT = (Inclusive - tinclu);
                debugger
                TotalVat = parseFloat(TotalVat) + parseFloat(VAT);
                debugger
                Exclusive = tinclu;

                TotalExclusive = parseFloat(TotalExclusive) + parseFloat(Exclusive);
                debugger
                var sendtotal = parseFloat(Inclusive)

                Total = parseFloat(Total) + parseFloat(sendtotal);

                debugger
                var markup = "<tr id='tablefadded'><td class='descriptiont'>" + Description + "</td><td>" + Quantity + "</td><td>" + InclPrice + "</td><td disabled>" + VAT.toFixed(2) + "</td><td>" + sendtotal.toFixed(2) + "</td></tr> ";
                $(".Added").append(markup);


                $("#TotalVAT").val("R" + " " + parseFloat(TotalVat).toFixed(2));
                $("#Total").val(parseFloat(Total).toFixed(2));
                $("#btnbtn").show();
                //clear values
                $("#model-quantity").val('');
                $("#model-description").val('');
                $("#model-incl").val('');
                $("#model-discount").val('');
                debugger
            }
        });


        //for saving all
        $('#SaveQuotation').click(function () {
            var quoID = $("#quotatonNumber").val();
            
            var descriptions = new Array();

            var quantities = new Array();

            var pricesc = new Array();

            var totalsc = new Array();

            $('#tbl-details tr:gt(0)').each(function () {
                descriptions.push($('td:eq(0)', this).text());
                quantities.push($('td:eq(1)', this).text());
                pricesc.push(parseFloat($('td:eq(2)', this).text()));
                totalsc.push(parseFloat($('td:eq(4)', this).text()));
            });
            var Descriptions = descriptions;
            var Quantaties = quantities;
            var Prices = pricesc;
            var Totals = totalsc;

            debugger
            $.ajax({
                url: '/ServiceQuotes/AddLines',
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ "Quotation_ID": quoID, "Descriptions": Descriptions, "Quantaties": Quantaties, "Prices": Prices, "Totals": Totals }),
                success: function (data) {
                    debugger
                    $("#return").prop("disabled", false);
                    Swal.fire(
                        '<span style="color:#32CD32">Items Added Successfuly',
                        '',
                        'success'
                    );
                    debugger
                    //after success
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    Swal.fire({
                        type: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                        footer: '<a href><span style="color:dodgerblue">Why do I have this issue?</a>'
                    });
                    //totally done
                }
            });


        });

        $('#return').click(function () {
            var qID = $("#quotatonNumber").val();
            var Total = parseFloat($("#Total").val());
            var Payment = $("#Pmethod option:selected").val();
            var Datechosen = $("#Datechosen").val();
            debugger
            $.ajax({
                url: "/ServiceQuotes/Create",
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ "quotatonNumber": qID, "Total": Total, "PaymentMenthod_ID": Payment, "Validuntil": Datechosen }),
                success: function (result) {
                    console.log(result);
                    Swal.fire(
                        '<span style="color:#32CD32">Quotation Sent Successfully',
                        '',
                        'success'
                    );
                    window.location.href = "/ServiceQuotes/IndexProviders"
                }
            });
        })




    </script>
    @Scripts.Render("~/bundles/jqueryval")
}